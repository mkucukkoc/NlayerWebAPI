// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerRepository;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NLayerRepository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221004091123_mig11")]
    partial class mig11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NLayerCore.Modelss.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kalemler"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kitaplar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Defterler"
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Konya/Turkey",
                            City = "Konya",
                            Class = "A",
                            Email = "1234567mustafa.mkm@gmail.xom",
                            FirstName = "Mustafa",
                            LastName = "Kucukkoc",
                            Phone = "5454323323"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Istanbul/Turkey",
                            City = "Istanbul",
                            Class = "B",
                            Email = "ali.mkm@gmail.xom",
                            FirstName = "Ali",
                            LastName = "Kucukkoc",
                            Phone = "5324353453"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Adana/Turkey",
                            City = "Adana",
                            Class = "C",
                            Email = "maho.mkm@gmail.xom",
                            FirstName = "Muhammed",
                            LastName = "Kucukkoc",
                            Phone = "5356653453"
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderDetailId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OrderNumber")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipperId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OrderNumber = 1m,
                            PaymentId = 1,
                            ShipperId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            OrderNumber = 2m,
                            PaymentId = 2,
                            ShipperId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            OrderNumber = 3m,
                            PaymentId = 1,
                            ShipperId = 1
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OrderNumber")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            OrderNumber = 1m,
                            Price = 230m,
                            ProductId = 2,
                            Quantity = 10m,
                            Total = 2300m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            OrderNumber = 1m,
                            Price = 221m,
                            ProductId = 1,
                            Quantity = 10m,
                            Total = 2210m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            OrderNumber = 1m,
                            Price = 230m,
                            ProductId = 2,
                            Quantity = 10m,
                            Total = 2300m
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentType = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            PaymentType = "Card"
                        },
                        new
                        {
                            Id = 3,
                            PaymentType = "Cash"
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Kalem 1",
                            Price = 100m,
                            Stock = 20,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Kalem 1",
                            Price = 100m,
                            Stock = 20,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Kalem 1",
                            Price = 100m,
                            Stock = 20,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Width")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Kırmzı",
                            Height = 100m,
                            ProductId = 1,
                            Width = 202m
                        },
                        new
                        {
                            Id = 2,
                            Color = "Mavi",
                            Height = 30m,
                            ProductId = 1,
                            Width = 122m
                        },
                        new
                        {
                            Id = 3,
                            Color = "Yesil",
                            Height = 49m,
                            ProductId = 1,
                            Width = 129m
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Shippers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Ada",
                            Phone = "5444666333"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Adalı",
                            Phone = "5444445333"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Adapazarı",
                            Phone = "5224666333"
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Karatay",
                            City = "Konya",
                            CompanyName = "Ada",
                            Country = "Turkey",
                            Email = "1234MKK@GMAİL.COM"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Meram",
                            City = "Konya",
                            CompanyName = "Adabalı",
                            Country = "Turkey",
                            Email = "adanalsal@gmail.COM"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Çeşme",
                            City = "Izmır",
                            CompanyName = "Adayalazar",
                            Country = "Turkey",
                            Email = "KK@GMAİL.COM"
                        });
                });

            modelBuilder.Entity("NLayerCore.Modelss.Order", b =>
                {
                    b.HasOne("NLayerCore.Modelss.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayerCore.Modelss.OrderDetail", null)
                        .WithMany("Orders")
                        .HasForeignKey("OrderDetailId");

                    b.HasOne("NLayerCore.Modelss.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayerCore.Modelss.Shipper", "Shipper")
                        .WithMany("Orders")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("NLayerCore.Modelss.OrderDetail", b =>
                {
                    b.HasOne("NLayerCore.Modelss.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayerCore.Modelss.Product", "product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Product", b =>
                {
                    b.HasOne("NLayerCore.Modelss.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayerCore.Modelss.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("NLayerCore.Modelss.ProductFeature", b =>
                {
                    b.HasOne("NLayerCore.Modelss.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayerCore.Modelss.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NLayerCore.Modelss.OrderDetail", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Payment", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductFeature")
                        .IsRequired();
                });

            modelBuilder.Entity("NLayerCore.Modelss.Shipper", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NLayerCore.Modelss.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
